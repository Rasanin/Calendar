{"version":3,"sources":["module/Style.js","component/Picker.js","containers/reducer/ModalReducer.js","module/CalcDate.js","containers/Modal.js","containers/reducer/CalendarReducer.js","module/Schedule.js","module/MakeCalendar.js","containers/Calendar.js","App.js","reportWebVitals.js","index.js"],"names":["Style","color","background","Picker","changeColor","className","map","index","style","onClick","ModalReducer","state","action","type","value","todo","checked","todos","date","transString","year","month","day","splitDate","target","String","split","CalcDate","start","end","console","log","returnYMD","ymd","now","Date","getFullYear","getMonth","getDate","result","startDate","endDate","test","getTime","ans","push","setDate","Modal","visible","onConfirm","onCancel","useReducer","dispatch","check","Initialization","onChange","useCallback","e","onTodos","placeholder","onKeyPress","key","calendarReducer","modal","undefined","schedule","Schedule","item","returnIdx","order","MakeCalendar","firstDay","lastDate","changeVisible","makeDay","week","prevLastDate","parseInt","i","idx","Math","ceil","today","initialState","Calendar","yearMonth","getDay","length","React","memo","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.190a243e.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst Style = (color) => {\r\n    const style = { background: color }\r\n\r\n    return style\r\n}\r\n\r\nexport default Style\r\n","import React from \"react\";\r\nimport Style from \"../module/Style\";\r\n\r\n\r\nconst Picker = ({changeColor}) => {\r\n\r\n    const colors = ['#efadce', '#ffe69c', '#a6e9d5', '#6ea8fe', '#c29ffa']\r\n\r\n    return (\r\n        <div className=\"picker\">\r\n                {colors.map((color, index) => (\r\n                    <div className=\"custom-check-box\" style={Style(color)} onClick={() => changeColor(color)} key={index}/>\r\n                ))}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Picker;\r\n","import React from \"react\";\r\n\r\nfunction ModalReducer(state, action) {\r\n    switch (action.type) {\r\n        // 색상 변경\r\n        case 'COLOR':\r\n            return {...state, color: action.value};\r\n        // 일정 입력\r\n        case 'TODO':\r\n            return {...state, todo: action.value};\r\n        // 체크 박스\r\n        case 'CHECK':\r\n            return {...state, checked: !action.value};\r\n        // 상태 초기화\r\n        case 'INITIALIZATION':\r\n            return{\r\n                color: '',\r\n                todo: '',\r\n                todos: '',\r\n                checked: false,\r\n            }\r\n        // 종료일 설정    \r\n        case 'TODOS':\r\n            return {...state, date: action.value}\r\n    }\r\n}\r\n\r\nexport default ModalReducer","import React from 'react';\r\n\r\n\r\nexport const transString = (year, month, day) => {\r\n    return year + '.' + month + '.' + day\r\n}\r\n\r\nconst splitDate = (target) => {\r\n    const result = String(target).split('.')\r\n    return result\r\n}\r\n\r\n\r\nconst CalcDate = (start, end) => {\r\n    console.log('end', end)\r\n    const returnYMD = (ymd) => {\r\n        const now = new Date(ymd)\r\n        const year = now.getFullYear()\r\n        const month = now.getMonth()+1\r\n        const date = now.getDate()\r\n\r\n        return [year, month, date]\r\n    }\r\n\r\n    const pattern = /^(19|20)\\d{2}.(0[1-9]|1[012]).(0[1-9]|[12][0-9]|3[0-1])$/;\r\n\r\n\r\n    const result = []\r\n    let startDate = splitDate(start)\r\n    let endDate = splitDate(end)\r\n\r\n    startDate = new Date(startDate[0], startDate[1] - 1, startDate[2])\r\n    endDate = new Date(endDate[0], endDate[1] - 1, endDate[2])\r\n\r\n    if (pattern.test(end) === false ||  startDate >= endDate) {\r\n        return []\r\n    }\r\n\r\n    while (startDate.getTime() <= endDate.getTime()) {\r\n        const ans = returnYMD(returnYMD(startDate))\r\n\r\n        result.push(transString(ans[0], ans[1], ans[2]))\r\n        startDate.setDate(startDate.getDate() + 1)\r\n    }\r\n\r\n    return result\r\n}\r\n\r\n\r\nexport default CalcDate;","import React, { useCallback, useReducer} from 'react';\r\nimport Picker from \"../component/Picker\";\r\nimport Style from \"../module/Style\";\r\nimport ModalReducer from \"./reducer/ModalReducer\";\r\nimport CalcDate from '../module/CalcDate';\r\n\r\nconst Modal = ({index, visible, onConfirm, onCancel}) => {\r\n    const initialState = {\r\n        color: '',\r\n        todo: '',\r\n        todos: '',\r\n        checked: false,\r\n        date: ''\r\n    };\r\n\r\n    const [state, dispatch] = useReducer(ModalReducer, initialState)\r\n\r\n\r\n    const color = state.color;\r\n    const todo = state.todo;\r\n    const todos = state.todos;\r\n    const check = state.checked;\r\n    const end = state.date\r\n\r\n    const onKeyPress = (e) => {\r\n        if (e.key == 'Enter') {\r\n            onConfirm({index, todo})\r\n            dispatch({type: 'CHANGE', value: ''})\r\n        }\r\n    }\r\n    \r\n    // 초기화\r\n    const Initialization = () => {\r\n        dispatch({type: 'INITIALIZATION'})\r\n    }\r\n\r\n    // 색상 변경\r\n    const changeColor = (color) => {\r\n        dispatch({type: 'COLOR', value: color})\r\n    }\r\n    \r\n    // 일정\r\n    const onChange = useCallback(e => {\r\n        dispatch({type: 'TODO', value: e.target.value})\r\n    }, [])\r\n    \r\n    // 일정 종료일\r\n    const onTodos = useCallback( e => {\r\n        dispatch({type: 'TODOS', value: e.target.value})\r\n    }, [])\r\n\r\n    // 체크 박스\r\n    const onCheck = () => {\r\n        dispatch({type: 'CHECK', value: check})\r\n    }\r\n    \r\n    // 입력 취소\r\n    const cancel = () => {\r\n        onCancel()\r\n        Initialization()\r\n    }\r\n    \r\n    // 입력\r\n    const confirm = () => {\r\n        const todos = CalcDate(index, end)\r\n        onConfirm({index, todo, color, todos})\r\n        Initialization()\r\n        changeColor('')\r\n    }\r\n\r\n\r\n    if (!visible) return null;\r\n    return (\r\n        <div className=\"fullscreen\">\r\n            <div className=\"modal\">\r\n                <p>{index}</p>\r\n                <div className=\"input\">\r\n                <input placeholder=\"일정\" value={todo} onChange={onChange} onKeyPress={onKeyPress}></input>\r\n                {color !== '' && <div className=\"custom-check-box\"\r\n                                     style={Style(color)}/>}\r\n                </div>\r\n                <div className=\"end\">\r\n                    <p>종료일 설정</p>\r\n                <input type = 'checkbox' onClick = {onCheck} />\r\n                </div>\r\n                <div className=\"choice-day\">\r\n                    { check === true &&\r\n                    <div className=\"day\">\r\n                        <div className=\"end-day\">\r\n                            <input type=\"text\" onChange={onTodos} placeholder=\"2021.10.13\"/>\r\n                        </div>\r\n                    </div>\r\n                    }\r\n                </div>\r\n                <Picker changeColor = {changeColor}/>\r\n                <div className=\"footer\">\r\n                    <button className=\"choice\" onClick={confirm} >Confirm</button>\r\n                    <button className=\"choice\" onClick={cancel}>Cancel</button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n     );\r\n};\r\n\r\nexport default Modal\r\n","import React from 'react';\r\n\r\nfunction calendarReducer(state, action) {\r\n\r\n    switch (action.type) {\r\n        case 'INCREMENT':\r\n            if (state.month < 11) {\r\n                return {...state, \"month\" : state.month+1}\r\n            }\r\n            // 12월을 넘길 경우 Year + 1\r\n            else {\r\n                return {...state, \"year\": state.year + 1,\"month\": 0}\r\n            }\r\n        case 'DECREMENT':\r\n            if (state.month > 0) {\r\n                return { ...state, \"month\": state.month - 1}\r\n            }\r\n            // 1월 보다 작을 경우 Year - 1\r\n            else {\r\n                return { ...state, \"year\": state.year - 1, \"month\": 11}\r\n            }\r\n        case 'MODAL':\r\n            return {...state, modal: {\r\n                    ...state.modal,\r\n                    visible: !state.modal.visible,\r\n                    index: action.value\r\n                }}\r\n        case 'INSERT':\r\n            // 해당 인덱스에 이미 일정이 있는 경우\r\n            if (state.schedule[action.index] !== undefined) {\r\n                return {...state, schedule: {\r\n                        ...state.schedule,\r\n                        [action.index]: [\r\n                            ...state.schedule[action.index],\r\n                            [action.todo, action.color]\r\n                        ]\r\n                    }}\r\n            }\r\n            // 해당 인덱스에 일정이 없는 경우\r\n            else {\r\n                return {...state, schedule: {\r\n                        ...state.schedule,\r\n                        [action.index]: [[action.todo, action.color]]\r\n                    }}\r\n            }\r\n    }\r\n}\r\n\r\nexport default calendarReducer;\r\n","import React from \"react\";\r\nimport Style from \"./Style\";\r\n\r\nconst Schedule = (index, todo) => {\r\n    const result =[]\r\n    if (todo[index] !== undefined) {\r\n        todo[index].map((item) => {\r\n            result.push(<li style={Style(item[1])} key={index+item}>{item[0]}</li>)\r\n        })\r\n        return result\r\n    }\r\n    return null;\r\n}\r\n\r\nexport default Schedule\r\n","import React from 'react';\r\nimport Schedule from \"./Schedule\";\r\nimport { transString } from \"./CalcDate\";\r\n\r\n/*\r\n * 현재 날짜를 key값 형식으로 변환\r\n * key ex) 2021.10.11\r\n */\r\nconst returnIdx = (order ,year, month, day) => {\r\n\r\n    if (order == 'PREV'){\r\n        if (month == 0) {\r\n            return transString(year-1, 12, day)\r\n        }\r\n        else {\r\n            return transString(year, month, day)\r\n        }\r\n    }\r\n     else if (order == 'NEXT') {\r\n         if (month == 11) {\r\n             return transString(year+1, 1, day)\r\n         }\r\n         else {\r\n             return transString(year, month + 2, day)\r\n         }\r\n    }\r\n\r\n    return transString(year, month+1, day)\r\n}\r\n\r\n\r\n\r\nconst MakeCalendar = ({year, month ,firstDay, lastDate, changeVisible, todo, }) => {\r\n    const result = []\r\n\r\n    const makeDay = (week) => {\r\n        const result = []\r\n        // 첫 주 \r\n        if (week == 1) {\r\n            const prevLastDate = parseInt(new Date(year, month,0).getDate());\r\n            for (let i = 1; i<=7; i++ ){\r\n                // 저번 달 날짜 \r\n                if (i <= firstDay) {\r\n                    const now = prevLastDate - firstDay + i\r\n                    const idx = returnIdx('PREV', year, month, now)\r\n\r\n                    result.push(\r\n                        <td className=\"diff\" onClick={() => changeVisible(idx)} key={idx}>\r\n                            {now}\r\n                    <div className=\"todo\">\r\n                        {Schedule(idx, todo)}\r\n                    </div>\r\n                    </td>)\r\n                }\r\n                // 현재 달 날짜\r\n                else {\r\n                    const now = i - firstDay\r\n                    const idx = returnIdx('', year, month, now)\r\n\r\n                    result.push(\r\n                        <td onClick={() => changeVisible(idx)} key={idx}>\r\n                            {now}\r\n                        <div className=\"todo\">\r\n                            {Schedule(idx, todo)}\r\n                        </div>\r\n                        </td>)\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            const startDate = ((week-1) * 7)\r\n            for (let i = startDate; i <= week*7 - 1; i ++) {\r\n                // 현재 달 날짜\r\n                if (i - firstDay  < lastDate) {\r\n                    const now = i - firstDay + 1\r\n                    const idx = returnIdx('', year, month, now)\r\n\r\n                    result.push(\r\n                        <td onClick={() => changeVisible(idx)} key={idx} >\r\n                            {now}\r\n                        <div className=\"todo\">\r\n                            {Schedule(idx, todo)}\r\n                        </div>\r\n                    </td>)\r\n                }\r\n                // 다음 달 날짜\r\n                else {\r\n                    const now = i - lastDate - firstDay + 1\r\n                    const idx = returnIdx('NEXT', year, month, now)\r\n\r\n                    result.push(\r\n                        <td className=\"diff\" onClick={() => changeVisible(idx)} key={idx}>\r\n                            {now}\r\n                        <div className=\"todo\">\r\n                            {Schedule(idx, todo)\r\n                            }</div>\r\n                    </td>)\r\n                }\r\n            }\r\n        }\r\n        return result\r\n    }\r\n\r\n    // 주 계산\r\n    const week = Math.ceil((firstDay + lastDate) / 7)\r\n    for(let i = 1; i <= week; i++) {\r\n        result.push(<tr key={week+i}>{makeDay(i)}</tr>);\r\n    }\r\n    return result;\r\n\r\n\r\n};\r\n\r\nexport default MakeCalendar\r\n","import React, {useReducer} from 'react';\r\nimport Modal from \"./Modal\";\r\nimport calendarReducer from \"./reducer/CalendarReducer\";\r\nimport MakeCalendar from \"../module/MakeCalendar\";\r\n\r\n\r\nconst today = new Date()\r\n\r\n// 초기 상태\r\nconst initialState = {\r\n     year: today.getFullYear(),\r\n     month: today.getMonth(),\r\n     modal: {\r\n         visible: false,\r\n         index: '',\r\n     },\r\n     schedule: []\r\n };\r\n\r\n\r\nconst Calendar = () => {\r\n    const [state, dispatch] = useReducer(calendarReducer, initialState)\r\n\r\n    // 날짜 관련\r\n    const year = state.year;\r\n    const month  = state.month;\r\n    const yearMonth = year + \".\" + (month+1);\r\n    const lastDate = parseInt(new Date(year, month+1, 0).getDate());\r\n    const firstDay = parseInt(new Date(year, month, 1).getDay());\r\n\r\n    // 일정\r\n    const todo = state.schedule\r\n\r\n    // Modal\r\n    const visible = state.modal.visible\r\n    const index = state.modal.index\r\n\r\n\r\n    // Month 감소\r\n    const onDecreases = () => {\r\n        dispatch({ type: 'DECREMENT'})\r\n    }\r\n\r\n    // Month 증가\r\n    const onIncreases = () => {\r\n        dispatch({ type: 'INCREMENT'})\r\n    }\r\n\r\n    // Modal Active\r\n    const changeVisible = (key) => {\r\n        dispatch({ type: 'MODAL', value: key})\r\n    }\r\n\r\n    // 일정 입력\r\n    const onConfirm = ({index, todo, color, todos}) => {\r\n        if (todos.length != 0) {\r\n            todos.map((item) => {\r\n                dispatch({type: 'INSERT', index: item, todo:todo, color: color})\r\n            })\r\n        }\r\n        else {\r\n            dispatch({type: 'INSERT', index: index, todo: todo, color: color})\r\n        }\r\n        dispatch({ type: \"MODAL\"})\r\n    }\r\n\r\n    // 일정 입력 취소\r\n    const onCancel = () => {\r\n        dispatch({ type: \"MODAL\"})\r\n    }\r\n\r\n\r\n    return (\r\n        <>\r\n            <div className=\"Calendar\">\r\n                <div className=\"header\">\r\n                    <button className=\"move\" onClick={onDecreases}>&lt;</button>\r\n                    <p>{yearMonth}</p>\r\n                    <button className=\"move\" onClick={onIncreases}>&gt;</button>\r\n                </div>\r\n                <table>\r\n                <thead>\r\n                    <tr>\r\n                        <td>Sun</td>\r\n                        <td>Mon</td>\r\n                        <td>Tue</td>\r\n                        <td>Wed</td>\r\n                        <td>Thu</td>\r\n                        <td>Fri</td>\r\n                        <td>Sat</td>\r\n                    </tr>\r\n                </thead>\r\n                    <tbody>\r\n                    {MakeCalendar({year, month ,firstDay, lastDate, changeVisible, todo, })}\r\n                    </tbody>\r\n                </table>\r\n                <Modal index= {index} visible={visible} onConfirm={onConfirm} onCancel={onCancel}/>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default React.memo(Calendar);\r\n","import React from \"react\";\r\nimport Calendar from \"./containers/Calendar\";\r\nimport \"./style/calendar.css\";\r\nimport \"./style/table.css\";\r\nimport \"./style/modal.css\"\r\n\r\n\r\nconst App = () => {\r\n  return (\r\n    <div>\r\n      <Calendar/>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}